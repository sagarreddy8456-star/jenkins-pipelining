name: Deploy with Ngrok

on:
  workflow_dispatch:  # Manual trigger

jobs:
  run-server:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy pandas flask tensorflow

      - name: Install Ngrok and jq
        run: |
          npm install -g ngrok
          sudo apt-get update && sudo apt-get install -y jq

      - name: Start Flask app in background
        run: |
          python app.py &
          sleep 5  # Give the server time to start

      - name: Start Ngrok tunnel
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: |
          ngrok authtoken $NGROK_AUTH_TOKEN
          ngrok http 5000 --log=stdout > ngrok.log &
          sleep 5
          echo "Fetching Ngrok URL..."
          curl --silent http://127.0.0.1:4040/api/tunnels \
            | jq -r '.tunnels[0].public_url' > ngrok_url.txt
          echo "Public URL: $(cat ngrok_url.txt)"

      - name: Output Ngrok Public URL
        run: |
          echo "Ngrok Tunnel URL:"
          cat ngrok_url.txt

      - name: Keep GitHub Actions runner alive
        run: |
          echo "Keeping server alive for 10 minutes..."
          sleep 600

        curl --silent http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url'

    - name: Keep alive
      run: sleep 10m
